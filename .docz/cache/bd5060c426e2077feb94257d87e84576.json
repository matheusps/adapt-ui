{"remainingRequest":"/Users/matheusps/wpc/react-quarks/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/matheusps/wpc/react-quarks/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/matheusps/wpc/react-quarks/node_modules/source-map-loader/index.js!/Users/matheusps/wpc/react-quarks/src/components/Loader/index.tsx","dependencies":[{"path":"/Users/matheusps/wpc/react-quarks/src/components/Loader/index.tsx","mtime":1560048788668},{"path":"/Users/matheusps/wpc/react-quarks/node_modules/cache-loader/dist/cjs.js","mtime":1559842977991},{"path":"/Users/matheusps/wpc/react-quarks/node_modules/thread-loader/dist/cjs.js","mtime":1559842979495},{"path":"/Users/matheusps/wpc/react-quarks/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1557839745199},{"path":"/Users/matheusps/wpc/react-quarks/node_modules/source-map-loader/index.js","mtime":1559842979033}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvbWF0aGV1c3BzL3dwYy9yZWFjdC1xdWFya3Mvc3JjL2NvbXBvbmVudHMvTG9hZGVyL2luZGV4LnRzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7CgppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgeyBTdmcsIENpcmNsZSB9IGZyb20gJy4vc3R5bGVkJzsKaW1wb3J0IHsgZ2V0R2FwLCBnZXRTcGVlZCwgZ2V0VGhpY2tuZXNzLCBnZXRTaXplIH0gZnJvbSAnLi4vLi4vZ2xvYmFsL2hlbHBlcnMnOwoKdmFyIExvYWRlciA9IGZ1bmN0aW9uIExvYWRlcihfcmVmKSB7CiAgdmFyIHRoaWNrbmVzcyA9IF9yZWYudGhpY2tuZXNzLAogICAgICBzaXplID0gX3JlZi5zaXplLAogICAgICBzcGVlZCA9IF9yZWYuc3BlZWQsCiAgICAgIGdhcCA9IF9yZWYuZ2FwLAogICAgICBnb2FsID0gX3JlZi5nb2FsOwogIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFN2ZywgewogICAgaGVpZ2h0OiAiIi5jb25jYXQoZ2V0U2l6ZShzaXplKSwgInJlbSIpLAogICAgd2lkdGg6ICIiLmNvbmNhdChnZXRTaXplKHNpemUpLCAicmVtIiksCiAgICBzdHlsZTogewogICAgICBhbmltYXRpb25EdXJhdGlvbjogIiIuY29uY2F0KGdldFNwZWVkKHNwZWVkKSwgIm1zIikKICAgIH0sCiAgICByb2xlOiAiaW1nIiwKICAgIHZpZXdCb3g6ICIwIDAgMzIgMzIiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KENpcmNsZSwgewogICAgZ29hbDogZ29hbCwKICAgIHJvbGU6ICJwcmVzZW50YXRpb24iLAogICAgY3g6IDE2LAogICAgY3k6IDE2LAogICAgcjogMTQgLSBnZXRUaGlja25lc3ModGhpY2tuZXNzKSAvIDIsCiAgICBmaWxsOiAibm9uZSIsCiAgICBzdHJva2VXaWR0aDogZ2V0VGhpY2tuZXNzKHRoaWNrbmVzcyksCiAgICBzdHJva2VEYXNoYXJyYXk6IE1hdGguUEkgKiAyICogKDExIC0gZ2V0R2FwKGdhcCkpLAogICAgc3Ryb2tlTGluZWNhcDogInJvdW5kIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSkpOwp9OwoKTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHsKICBnb2FsOiAnY3JlYXRlJywKICBzaXplOiAnbWQnLAogIHRoaWNrbmVzczogJ21kJywKICBzcGVlZDogJ25vcm1hbCcsCiAgZ2FwOiAnbGcnCn07CnZhciBfZGVmYXVsdCA9IExvYWRlcjsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIExvYWRlciAhPT0gJ3VuZGVmaW5lZCcgJiYgTG9hZGVyICYmIExvYWRlciA9PT0gT2JqZWN0KExvYWRlcikgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShMb2FkZXIpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KExvYWRlciwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkxvYWRlciIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvTG9hZGVyL2luZGV4LnRzeCIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihMb2FkZXIsICJMb2FkZXIiLCAiL1VzZXJzL21hdGhldXNwcy93cGMvcmVhY3QtcXVhcmtzL3NyYy9jb21wb25lbnRzL0xvYWRlci9pbmRleC50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL21hdGhldXNwcy93cGMvcmVhY3QtcXVhcmtzL3NyYy9jb21wb25lbnRzL0xvYWRlci9pbmRleC50c3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/Users/matheusps/wpc/react-quarks/src/components/Loader/index.tsx"],"names":["React","Svg","Circle","getGap","getSpeed","getThickness","getSize","Loader","thickness","size","speed","gap","goal","animationDuration","Math","PI","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,GAAT,EAAcC,MAAd,QAA4B,UAA5B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,YAA3B,EAAyCC,OAAzC,QAAwD,sBAAxD;;AASA,IAAMC,MAAiB,GAAG,SAApBA,MAAoB;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,IAAd,QAAcA,IAAd;AAAA,MAAoBC,KAApB,QAAoBA,KAApB;AAAA,MAA2BC,GAA3B,QAA2BA,GAA3B;AAAA,MAAgCC,IAAhC,QAAgCA,IAAhC;AAAA,SACxB,oBAAC,GAAD;AACE,IAAA,MAAM,YAAKN,OAAO,CAACG,IAAD,CAAZ,QADR;AAEE,IAAA,KAAK,YAAKH,OAAO,CAACG,IAAD,CAAZ,QAFP;AAGE,IAAA,KAAK,EAAE;AAAEI,MAAAA,iBAAiB,YAAKT,QAAQ,CAACM,KAAD,CAAb;AAAnB,KAHT;AAIE,IAAA,IAAI,EAAC,KAJP;AAKE,IAAA,OAAO,EAAC,WALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,EAAE,EAAE,EAHN;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,CAAC,EAAE,KAAKP,YAAY,CAACG,SAAD,CAAZ,GAA2B,CALrC;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,WAAW,EAAEH,YAAY,CAACG,SAAD,CAP3B;AAQE,IAAA,eAAe,EAAEM,IAAI,CAACC,EAAL,GAAU,CAAV,IAAe,KAAKZ,MAAM,CAACQ,GAAD,CAA1B,CARnB;AASE,IAAA,aAAa,EAAC,OAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADwB;AAAA,CAA1B;;AAsBAJ,MAAM,CAACS,YAAP,GAAsB;AACpBJ,EAAAA,IAAI,EAAE,QADc;AAEpBH,EAAAA,IAAI,EAAE,IAFc;AAGpBD,EAAAA,SAAS,EAAE,IAHS;AAIpBE,EAAAA,KAAK,EAAE,QAJa;AAKpBC,EAAAA,GAAG,EAAE;AALe,CAAtB;eAQeJ,M;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA9BMA,M","sourcesContent":["import React, { FC } from 'react'\n\nimport { Svg, Circle } from './styled'\nimport { getGap, getSpeed, getThickness, getSize } from '../../global/helpers'\n\ninterface Props extends withGoal {\n  readonly speed?: Speed\n  readonly gap?: Measure\n  readonly thickness?: Measure\n  readonly size?: Measure\n}\n\nconst Loader: FC<Props> = ({ thickness, size, speed, gap, goal }) => (\n  <Svg\n    height={`${getSize(size!)}rem`}\n    width={`${getSize(size!)}rem`}\n    style={{ animationDuration: `${getSpeed(speed!)}ms` }}\n    role=\"img\"\n    viewBox=\"0 0 32 32\"\n  >\n    <Circle\n      goal={goal}\n      role=\"presentation\"\n      cx={16}\n      cy={16}\n      r={14 - getThickness(thickness!) / 2}\n      fill=\"none\"\n      strokeWidth={getThickness(thickness!)}\n      strokeDasharray={Math.PI * 2 * (11 - getGap(gap!))}\n      strokeLinecap=\"round\"\n    />\n  </Svg>\n)\n\nLoader.defaultProps = {\n  goal: 'create',\n  size: 'md',\n  thickness: 'md',\n  speed: 'normal',\n  gap: 'lg',\n}\n\nexport default Loader\n"]}]}